//----------------------
// <auto-generated>
//     Generated using Maestria.TypeProviders (https://github.com/MaestriaNet/TypeProviders)
// </auto-generated>
//----------------------

using System;
using System.IO;
using ClosedXML.Excel;

namespace Maestria.TypeProviders.Excel
{
    public static class ExcelExtensions
    {
        public static int ColumnUsedCount(this IXLWorksheet sheet) => sheet.LastColumnUsed().ColumnNumber();
        public static int RowUsedCount(this IXLWorksheet sheet) => sheet.LastRowUsed().RowNumber();

        public static int ColumnByName(this IXLWorksheet sheet, string columnName)
        {
            if (string.IsNullOrWhiteSpace(columnName)) throw new ArgumentNullException(nameof(columnName), "Informe o nome da coluna para obter posição!");
            if (sheet.RowCount() <= 0) return 0;
            for (var i = 1; i <= sheet.ColumnUsedCount(); i++)
                if (sheet.Row(1).Cell(i).Value.ToString()?.ToUpper() == columnName.ToUpper()) return i;
            return 0;
        }

        public static FileStream OpenFile(string filePath)
        {
            try
            {
                return new FileStream(filePath, FileMode.Open, FileAccess.Read);
            }
            catch
            {
                // Need more access permissions to the file already in use by the operating system
                return new FileStream(filePath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite);
            }
        }
    }
}
